# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import recommender_pb2 as recommender__pb2


class RecommendServiceStub(object):
    """Define message for recommend model 

    parameter :
    User ID
    List of user content watch list

    return : 
    List of user recommend content list 

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.modelTrainingEvent = channel.unary_unary(
                '/RecommendService/modelTrainingEvent',
                request_serializer=recommender__pb2.TrainRequest.SerializeToString,
                response_deserializer=recommender__pb2.TrainResponse.FromString,
                )
        self.RecommendContentEvent = channel.unary_unary(
                '/RecommendService/RecommendContentEvent',
                request_serializer=recommender__pb2.RecommendRequest.SerializeToString,
                response_deserializer=recommender__pb2.RecommendResponse.FromString,
                )


class RecommendServiceServicer(object):
    """Define message for recommend model 

    parameter :
    User ID
    List of user content watch list

    return : 
    List of user recommend content list 

    """

    def modelTrainingEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecommendContentEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RecommendServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'modelTrainingEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.modelTrainingEvent,
                    request_deserializer=recommender__pb2.TrainRequest.FromString,
                    response_serializer=recommender__pb2.TrainResponse.SerializeToString,
            ),
            'RecommendContentEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.RecommendContentEvent,
                    request_deserializer=recommender__pb2.RecommendRequest.FromString,
                    response_serializer=recommender__pb2.RecommendResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RecommendService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RecommendService(object):
    """Define message for recommend model 

    parameter :
    User ID
    List of user content watch list

    return : 
    List of user recommend content list 

    """

    @staticmethod
    def modelTrainingEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RecommendService/modelTrainingEvent',
            recommender__pb2.TrainRequest.SerializeToString,
            recommender__pb2.TrainResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecommendContentEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RecommendService/RecommendContentEvent',
            recommender__pb2.RecommendRequest.SerializeToString,
            recommender__pb2.RecommendResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
